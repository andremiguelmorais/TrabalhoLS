{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\TrabalhoLS\\\\Trabalho_Pratico_LS\\\\src\\\\components\\\\gameboard\\\\GameBoard.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./game-board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROWS = 6;\nconst COLS = 7;\nfunction GameBoard({\n  opponent,\n  player1Name,\n  player2Name,\n  player1Color,\n  player2Color\n}) {\n  _s();\n  const [board, setBoard] = useState(Array(ROWS).fill().map(() => Array(COLS).fill(null)));\n  const [currentPlayer, setCurrentPlayer] = useState({\n    name: player1Name,\n    color: player1Color\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const [highlightedCol, setHighlightedCol] = useState(null);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const resetGame = () => {\n    setBoard(Array(ROWS).fill().map(() => Array(COLS).fill(null)));\n    setCurrentPlayer({\n      name: player1Name,\n      color: player1Color\n    });\n    setGameOver(false);\n    setHighlightedCol(null);\n    setTimeElapsed(0);\n  };\n  const handleColumnClick = colIndex => {\n    if (gameOver) return;\n    for (let row = ROWS - 1; row >= 0; row--) {\n      if (!board[row][colIndex]) {\n        const newBoard = board.map(r => [...r]);\n        newBoard[row][colIndex] = currentPlayer.color;\n        setBoard(newBoard);\n        checkForWinner(newBoard, row, colIndex);\n        setCurrentPlayer(currentPlayer.color === player1Color ? {\n          name: player2Name,\n          color: player2Color\n        } : {\n          name: player1Name,\n          color: player1Color\n        });\n        setTimeElapsed(0);\n        break;\n      }\n    }\n  };\n  const checkForWinner = (newBoard, row, col) => {\n    if (checkDirection(newBoard, row, col, 0, 1) || checkDirection(newBoard, row, col, 0, -1) || checkDirection(newBoard, row, col, 1, 0) || checkDirection(newBoard, row, col, 1, 1) || checkDirection(newBoard, row, col, 1, -1)) {\n      setGameOver(true);\n      alert(`${currentPlayer.name} venceu!`);\n      return;\n    }\n  };\n  const checkDirection = (board, row, col, rowDir, colDir) => {\n    let count = 1;\n    for (let i = 1; i < 4; i++) {\n      const r = row + i * rowDir;\n      const c = col + i * colDir;\n      if (r >= 0 && r < ROWS && c >= 0 && c < COLS && board[r][c] === currentPlayer.color) {\n        count++;\n      } else {\n        break;\n      }\n    }\n    for (let i = 1; i < 4; i++) {\n      const r = row - i * rowDir;\n      const c = col - i * colDir;\n      if (r >= 0 && r < ROWS && c >= 0 && c < COLS && board[r][c] === currentPlayer.color) {\n        count++;\n      } else {\n        break;\n      }\n    }\n    return count >= 4;\n  };\n  const botPlay = () => {\n    if (gameOver || currentPlayer.color !== player2Color) return;\n    let colIndex = -1;\n    for (let col = 0; col < COLS; col++) {\n      for (let row = ROWS - 1; row >= 0; row--) {\n        if (!board[row][col]) {\n          colIndex = col;\n          break;\n        }\n      }\n      if (colIndex !== -1) break;\n    }\n    if (colIndex !== -1) {\n      handleColumnClick(colIndex);\n    }\n  };\n  useEffect(() => {\n    if (opponent === '2' && currentPlayer.color === player2Color) {\n      const timeout = setTimeout(() => {\n        botPlay();\n      }, 500);\n      return () => clearTimeout(timeout);\n    }\n  }, [currentPlayer, opponent, board]);\n  useEffect(() => {\n    if (gameOver) return;\n    setTimeElapsed(0);\n    const interval = setInterval(() => {\n      setTimeElapsed(prev => {\n        if (prev >= 10) {\n          setCurrentPlayer(currentPlayer.color === player1Color ? {\n            name: player2Name,\n            color: player2Color\n          } : {\n            name: player1Name,\n            color: player1Color\n          });\n          return 0;\n        }\n        return prev + 1;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [currentPlayer, gameOver]);\n  const handleMouseMove = e => {\n    const boardRect = e.target.getBoundingClientRect();\n    const x = e.clientX - boardRect.left;\n    const colIndex = Math.floor(x / (boardRect.width / COLS));\n    setHighlightedCol(colIndex);\n  };\n  const getColorStyle = color => {\n    switch (color) {\n      case 'ðŸ”´':\n        return 'red';\n      case 'ðŸŸ¡':\n        return 'yellow';\n      case 'ðŸ”µ':\n        return 'blue';\n      default:\n        return color || 'gray';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: gameOver ? \"Jogo encerrado\" : `${currentPlayer.name} (${currentPlayer.color}) - Tempo da jogada: ${timeElapsed} seg`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      onMouseMove: handleMouseMove,\n      children: [board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleColumnClick(colIndex),\n          onDragOver: e => e.preventDefault(),\n          onDrop: () => handleColumnClick(colIndex),\n          className: `board-cell ${highlightedCol === colIndex ? 'highlighted' : ''} ${gameOver ? 'disabled' : ''}`,\n          style: {\n            color: cell ? getColorStyle(cell) : undefined\n          },\n          children: cell\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)), highlightedCol !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"highlight-piece\",\n        style: {\n          left: highlightedCol * 60,\n          backgroundColor: getColorStyle(currentPlayer.color)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Reiniciar Jogo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(GameBoard, \"suqzQL/ymoheZOcVyfclk7ZkHLI=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ROWS","COLS","GameBoard","opponent","player1Name","player2Name","player1Color","player2Color","_s","board","setBoard","Array","fill","map","currentPlayer","setCurrentPlayer","name","color","gameOver","setGameOver","highlightedCol","setHighlightedCol","timeElapsed","setTimeElapsed","resetGame","handleColumnClick","colIndex","row","newBoard","r","checkForWinner","col","checkDirection","alert","rowDir","colDir","count","i","c","botPlay","timeout","setTimeout","clearTimeout","interval","setInterval","prev","clearInterval","handleMouseMove","e","boardRect","target","getBoundingClientRect","x","clientX","left","Math","floor","width","getColorStyle","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onMouseMove","rowIndex","cell","onClick","onDragOver","preventDefault","onDrop","style","undefined","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/andre/TrabalhoLS/Trabalho_Pratico_LS/src/components/gameboard/GameBoard.component.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./game-board.css\";\r\n\r\nconst ROWS = 6;\r\nconst COLS = 7;\r\n\r\nfunction GameBoard({ opponent, player1Name, player2Name, player1Color, player2Color }) {\r\n  const [board, setBoard] = useState(Array(ROWS).fill().map(() => Array(COLS).fill(null)));\r\n  const [currentPlayer, setCurrentPlayer] = useState({ name: player1Name, color: player1Color });\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [highlightedCol, setHighlightedCol] = useState(null);\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n\r\n  const resetGame = () => {\r\n    setBoard(Array(ROWS).fill().map(() => Array(COLS).fill(null)));\r\n    setCurrentPlayer({ name: player1Name, color: player1Color });\r\n    setGameOver(false);\r\n    setHighlightedCol(null);\r\n    setTimeElapsed(0);\r\n  };\r\n\r\n  const handleColumnClick = (colIndex) => {\r\n    if (gameOver) return;\r\n\r\n    for (let row = ROWS - 1; row >= 0; row--) {\r\n      if (!board[row][colIndex]) {\r\n        const newBoard = board.map((r) => [...r]);\r\n        newBoard[row][colIndex] = currentPlayer.color;\r\n        setBoard(newBoard);\r\n        checkForWinner(newBoard, row, colIndex);\r\n        setCurrentPlayer(currentPlayer.color === player1Color\r\n          ? { name: player2Name, color: player2Color }\r\n          : { name: player1Name, color: player1Color });\r\n        setTimeElapsed(0);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForWinner = (newBoard, row, col) => {\r\n    if (\r\n      checkDirection(newBoard, row, col, 0, 1) ||\r\n      checkDirection(newBoard, row, col, 0, -1) ||\r\n      checkDirection(newBoard, row, col, 1, 0) ||\r\n      checkDirection(newBoard, row, col, 1, 1) ||\r\n      checkDirection(newBoard, row, col, 1, -1)\r\n    ) {\r\n      setGameOver(true);\r\n      alert(`${currentPlayer.name} venceu!`);\r\n      return;\r\n    }\r\n  };\r\n\r\n  const checkDirection = (board, row, col, rowDir, colDir) => {\r\n    let count = 1;\r\n\r\n    for (let i = 1; i < 4; i++) {\r\n      const r = row + i * rowDir;\r\n      const c = col + i * colDir;\r\n      if (r >= 0 && r < ROWS && c >= 0 && c < COLS && board[r][c] === currentPlayer.color) {\r\n        count++;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    for (let i = 1; i < 4; i++) {\r\n      const r = row - i * rowDir;\r\n      const c = col - i * colDir;\r\n      if (r >= 0 && r < ROWS && c >= 0 && c < COLS && board[r][c] === currentPlayer.color) {\r\n        count++;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return count >= 4;\r\n  };\r\n\r\n  const botPlay = () => {\r\n    \r\n    if (gameOver || currentPlayer.color !== player2Color) return;\r\n\r\n    let colIndex = -1;\r\n    for (let col = 0; col < COLS; col++) {\r\n      for (let row = ROWS - 1; row >= 0; row--) {\r\n        if (!board[row][col]) {\r\n          colIndex = col;\r\n          break;\r\n        }\r\n      }\r\n      if (colIndex !== -1) break;\r\n    }\r\n\r\n    if (colIndex !== -1) {\r\n      handleColumnClick(colIndex);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (opponent === '2' && currentPlayer.color === player2Color) {\r\n      const timeout = setTimeout(() => {\r\n        botPlay();\r\n      }, 500);\r\n      return () => clearTimeout(timeout);\r\n    }\r\n  }, [currentPlayer, opponent, board]);\r\n\r\n  useEffect(() => {\r\n    if (gameOver) return;\r\n\r\n    setTimeElapsed(0);\r\n\r\n    const interval = setInterval(() => {\r\n      setTimeElapsed(prev => {\r\n        if (prev >= 10) {\r\n          setCurrentPlayer(currentPlayer.color === player1Color\r\n            ? { name: player2Name, color: player2Color }\r\n            : { name: player1Name, color: player1Color });\r\n          return 0;\r\n        }\r\n        return prev + 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [currentPlayer, gameOver]);\r\n\r\n  const handleMouseMove = (e) => {\r\n    const boardRect = e.target.getBoundingClientRect();\r\n    const x = e.clientX - boardRect.left;\r\n    const colIndex = Math.floor(x / (boardRect.width / COLS));\r\n    setHighlightedCol(colIndex);\r\n  };\r\n\r\n  const getColorStyle = (color) => {\r\n    switch(color) {\r\n      case 'ðŸ”´': return 'red';\r\n      case 'ðŸŸ¡': return 'yellow';\r\n      case 'ðŸ”µ': return 'blue';\r\n      default: return color || 'gray';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"game-info\">\r\n        {gameOver\r\n          ? \"Jogo encerrado\"\r\n          : `${currentPlayer.name} (${currentPlayer.color}) - Tempo da jogada: ${timeElapsed} seg`}\r\n      </div>\r\n\r\n      \r\n\r\n      <div className=\"game-board\" onMouseMove={handleMouseMove}>\r\n        {board.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"board-row\">\r\n            {row.map((cell, colIndex) => (\r\n              <div\r\n                key={colIndex}\r\n                onClick={() => handleColumnClick(colIndex)}\r\n                onDragOver={(e) => e.preventDefault()}           \r\n                onDrop={() => handleColumnClick(colIndex)}        \r\n                className={`board-cell ${highlightedCol === colIndex ? 'highlighted' : ''} ${gameOver ? 'disabled' : ''}`}\r\n                style={{ color: cell ? getColorStyle(cell) : undefined }}\r\n              >\r\n                {cell}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n\r\n        {highlightedCol !== null && (\r\n          <div\r\n            className=\"highlight-piece\"\r\n            style={{\r\n              left: highlightedCol * 60,\r\n              backgroundColor: getColorStyle(currentPlayer.color)\r\n            }}\r\n          ></div>\r\n        )}\r\n      </div>\r\n\r\n      {gameOver && (\r\n        <div className=\"game-over-button\">\r\n          <button onClick={resetGame}>Reiniciar Jogo</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}