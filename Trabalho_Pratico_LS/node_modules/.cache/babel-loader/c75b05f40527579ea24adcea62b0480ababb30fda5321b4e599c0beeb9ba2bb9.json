{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\TrabalhoLS\\\\Trabalho_Pratico_LS\\\\src\\\\components\\\\gameboard\\\\GameBoard.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport WinnerModal from \"../Confetis/WinnerModal.component\";\nimport \"./game-board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROWS = 6;\nconst COLS = 7;\nconst MAX_TIME = 10; // tempo máximo por turno\n\nfunction GameBoard({\n  opponent,\n  player1Name,\n  player2Name,\n  player1Color,\n  player2Color\n}) {\n  _s();\n  // 1) gera N células especiais\n  const generateSpecialCells = (count = 5) => {\n    const setCoords = new Set();\n    while (setCoords.size < count) {\n      const r = Math.floor(Math.random() * ROWS);\n      const c = Math.floor(Math.random() * COLS);\n      setCoords.add(`${r}-${c}`);\n    }\n    return Array.from(setCoords).map(s => {\n      const [row, col] = s.split(\"-\").map(Number);\n      return {\n        row,\n        col\n      };\n    });\n  };\n  const getRandomStartingPlayer = () => Math.random() < 0.5 ? {\n    name: player1Name,\n    color: player1Color\n  } : {\n    name: player2Name,\n    color: player2Color\n  };\n  const [specialCells, setSpecialCells] = useState(() => generateSpecialCells());\n  const [board, setBoard] = useState(Array(ROWS).fill().map(() => Array(COLS).fill(null)));\n  const [currentPlayer, setCurrentPlayer] = useState(getRandomStartingPlayer());\n  const [gameOver, setGameOver] = useState(false);\n  const [highlightedCol, setHighlightedCol] = useState(null);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [winner, setWinner] = useState(null);\n  const timerRef = useRef(null);\n  useEffect(() => {\n    clearInterval(timerRef.current);\n    setTimeElapsed(0);\n    if (!gameOver) {\n      timerRef.current = setInterval(() => {\n        setTimeElapsed(prev => {\n          if (prev + 1 >= MAX_TIME) {\n            clearInterval(timerRef.current);\n            setCurrentPlayer(p => p.color === player1Color ? {\n              name: player2Name,\n              color: player2Color\n            } : {\n              name: player1Name,\n              color: player1Color\n            });\n            return 0;\n          }\n          return prev + 1;\n        });\n      }, 1000);\n    }\n    return () => clearInterval(timerRef.current);\n  }, [currentPlayer, gameOver]);\n  const resetGame = () => {\n    setBoard(Array(ROWS).fill().map(() => Array(COLS).fill(null)));\n    setCurrentPlayer(getRandomStartingPlayer());\n    setGameOver(false);\n    setHighlightedCol(null);\n    setWinner(null);\n    setSpecialCells(generateSpecialCells());\n  };\n  const handleColumnClick = colIndex => {\n    if (gameOver) return;\n    for (let row = ROWS - 1; row >= 0; row--) {\n      if (!board[row][colIndex]) {\n        const newBoard = board.map(r => [...r]);\n        newBoard[row][colIndex] = currentPlayer.color;\n        setBoard(newBoard);\n        checkForWinner(newBoard, row, colIndex);\n        const isSpecial = specialCells.some(cell => cell.row === row && cell.col === colIndex);\n        if (!isSpecial) {\n          setCurrentPlayer(p => p.color === player1Color ? {\n            name: player2Name,\n            color: player2Color\n          } : {\n            name: player1Name,\n            color: player1Color\n          });\n        } else {\n          console.log(\"⭐ Bônus: joga de novo!\");\n        }\n        break;\n      }\n    }\n  };\n  const checkForWinner = (newBoard, row, col) => {\n    const dirs = [[0, 1], [1, 0], [1, 1], [1, -1]];\n    if (dirs.some(([dx, dy]) => checkDirection(newBoard, row, col, dx, dy))) {\n      setGameOver(true);\n      setWinner(currentPlayer.name);\n    }\n  };\n  const checkDirection = (board, row, col, dx, dy) => {\n    let count = 1;\n    for (let dir of [1, -1]) {\n      for (let i = 1; i < 4; i++) {\n        const r = row + i * dx * dir;\n        const c = col + i * dy * dir;\n        if (r >= 0 && r < ROWS && c >= 0 && c < COLS && board[r][c] === currentPlayer.color) {\n          count++;\n        } else break;\n      }\n    }\n    return count >= 4;\n  };\n  const handleMouseMove = e => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const colWidth = rect.width / COLS;\n    setHighlightedCol(Math.floor(x / colWidth));\n  };\n  const getColorStyle = c => {\n    switch (c) {\n      case \"🔴\":\n        return \"red\";\n      case \"🟡\":\n        return \"yellow\";\n      case \"🔵\":\n        return \"blue\";\n      default:\n        return c || \"gray\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [winner && /*#__PURE__*/_jsxDEV(WinnerModal, {\n      winner: winner,\n      onClose: () => setWinner(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: gameOver ? `Jogo encerrado - Vencedor: ${winner}` : `${currentPlayer.name} (${currentPlayer.color}) - Tempo: ${timeElapsed}s`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      onMouseMove: handleMouseMove,\n      children: board.map((rowArr, r) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: rowArr.map((cell, c) => {\n          const isSpecial = specialCells.some(cell => cell.row === r && cell.col === c);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: [\"board-cell\", highlightedCol === c && \"highlighted\", gameOver && \"disabled\", isSpecial && \"special\"].filter(Boolean).join(\" \"),\n            onClick: () => handleColumnClick(c),\n            onDragOver: e => e.preventDefault(),\n            onDrop: () => handleColumnClick(c),\n            style: {\n              color: cell ? getColorStyle(cell) : undefined\n            },\n            children: cell\n          }, c, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 17\n          }, this);\n        })\n      }, r, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over-button\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Reiniciar Jogo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: () => window.location.href = \"/\",\n        children: \"\\uD83C\\uDFE0 P\\xE1gina Inicial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n_s(GameBoard, \"Xjt1RVpvxiX/rSmN0C/oBpCVnzA=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","WinnerModal","jsxDEV","_jsxDEV","ROWS","COLS","MAX_TIME","GameBoard","opponent","player1Name","player2Name","player1Color","player2Color","_s","generateSpecialCells","count","setCoords","Set","size","r","Math","floor","random","c","add","Array","from","map","s","row","col","split","Number","getRandomStartingPlayer","name","color","specialCells","setSpecialCells","board","setBoard","fill","currentPlayer","setCurrentPlayer","gameOver","setGameOver","highlightedCol","setHighlightedCol","timeElapsed","setTimeElapsed","winner","setWinner","timerRef","clearInterval","current","setInterval","prev","p","resetGame","handleColumnClick","colIndex","newBoard","checkForWinner","isSpecial","some","cell","console","log","dirs","dx","dy","checkDirection","dir","i","handleMouseMove","e","rect","currentTarget","getBoundingClientRect","x","clientX","left","colWidth","width","getColorStyle","children","onClose","fileName","_jsxFileName","lineNumber","columnNumber","className","onMouseMove","rowArr","filter","Boolean","join","onClick","onDragOver","preventDefault","onDrop","style","undefined","window","location","href","_c","$RefreshReg$"],"sources":["C:/Users/andre/TrabalhoLS/Trabalho_Pratico_LS/src/components/gameboard/GameBoard.component.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport WinnerModal from \"../Confetis/WinnerModal.component\";\r\nimport \"./game-board.css\";\r\n\r\nconst ROWS = 6;\r\nconst COLS = 7;\r\nconst MAX_TIME = 10;  // tempo máximo por turno\r\n\r\nfunction GameBoard({\r\n  opponent,\r\n  player1Name,\r\n  player2Name,\r\n  player1Color,\r\n  player2Color,\r\n}) {\r\n  // 1) gera N células especiais\r\n  const generateSpecialCells = (count = 5) => {\r\n    const setCoords = new Set();\r\n    while (setCoords.size < count) {\r\n      const r = Math.floor(Math.random() * ROWS);\r\n      const c = Math.floor(Math.random() * COLS);\r\n      setCoords.add(`${r}-${c}`);\r\n    }\r\n    return Array.from(setCoords).map((s) => {\r\n      const [row, col] = s.split(\"-\").map(Number);\r\n      return { row, col };\r\n    });\r\n  };\r\n\r\n\r\n  const getRandomStartingPlayer = () =>\r\n    Math.random() < 0.5\r\n      ? { name: player1Name, color: player1Color }\r\n      : { name: player2Name, color: player2Color };\r\n\r\n\r\n  const [specialCells, setSpecialCells] = useState(() =>\r\n    generateSpecialCells()\r\n  );\r\n  const [board, setBoard] = useState(\r\n    Array(ROWS).fill().map(() => Array(COLS).fill(null))\r\n  );\r\n  const [currentPlayer, setCurrentPlayer] = useState(\r\n    getRandomStartingPlayer()\r\n  );\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [highlightedCol, setHighlightedCol] = useState(null);\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n  const [winner, setWinner] = useState(null);\r\n\r\n \r\n  const timerRef = useRef(null);\r\n\r\n  \r\n  useEffect(() => {\r\n \r\n    clearInterval(timerRef.current);\r\n\r\n    setTimeElapsed(0);\r\n\r\n    if (!gameOver) {\r\n      timerRef.current = setInterval(() => {\r\n        setTimeElapsed((prev) => {\r\n          if (prev + 1 >= MAX_TIME) {\r\n            clearInterval(timerRef.current);\r\n          \r\n            setCurrentPlayer((p) =>\r\n              p.color === player1Color\r\n                ? { name: player2Name, color: player2Color }\r\n                : { name: player1Name, color: player1Color }\r\n            );\r\n            return 0;\r\n          }\r\n          return prev + 1;\r\n        });\r\n      }, 1000);\r\n    }\r\n\r\n    \r\n    return () => clearInterval(timerRef.current);\r\n  }, [currentPlayer, gameOver]);\r\n\r\n  \r\n  const resetGame = () => {\r\n    setBoard(Array(ROWS).fill().map(() => Array(COLS).fill(null)));\r\n    setCurrentPlayer(getRandomStartingPlayer());\r\n    setGameOver(false);\r\n    setHighlightedCol(null);\r\n    setWinner(null);\r\n    setSpecialCells(generateSpecialCells());\r\n    \r\n  };\r\n\r\n\r\n  const handleColumnClick = (colIndex) => {\r\n    if (gameOver) return;\r\n    for (let row = ROWS - 1; row >= 0; row--) {\r\n      if (!board[row][colIndex]) {\r\n        const newBoard = board.map((r) => [...r]);\r\n        newBoard[row][colIndex] = currentPlayer.color;\r\n        setBoard(newBoard);\r\n\r\n       \r\n        checkForWinner(newBoard, row, colIndex);\r\n\r\n        \r\n        const isSpecial = specialCells.some(\r\n          (cell) => cell.row === row && cell.col === colIndex\r\n        );\r\n\r\n        if (!isSpecial) {\r\n          \r\n          setCurrentPlayer((p) =>\r\n            p.color === player1Color\r\n              ? { name: player2Name, color: player2Color }\r\n              : { name: player1Name, color: player1Color }\r\n          );\r\n        } else {\r\n          console.log(\"⭐ Bônus: joga de novo!\");\r\n          \r\n        }\r\n\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForWinner = (newBoard, row, col) => {\r\n    const dirs = [\r\n      [0, 1],\r\n      [1, 0],\r\n      [1, 1],\r\n      [1, -1],\r\n    ];\r\n    if (dirs.some(([dx, dy]) => checkDirection(newBoard, row, col, dx, dy))) {\r\n      setGameOver(true);\r\n      setWinner(currentPlayer.name);\r\n    }\r\n  };\r\n\r\n  const checkDirection = (board, row, col, dx, dy) => {\r\n    let count = 1;\r\n    for (let dir of [1, -1]) {\r\n      for (let i = 1; i < 4; i++) {\r\n        const r = row + i * dx * dir;\r\n        const c = col + i * dy * dir;\r\n        if (\r\n          r >= 0 &&\r\n          r < ROWS &&\r\n          c >= 0 &&\r\n          c < COLS &&\r\n          board[r][c] === currentPlayer.color\r\n        ) {\r\n          count++;\r\n        } else break;\r\n      }\r\n    }\r\n    return count >= 4;\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const colWidth = rect.width / COLS;\r\n    setHighlightedCol(Math.floor(x / colWidth));\r\n  };\r\n\r\n  const getColorStyle = (c) => {\r\n    switch (c) {\r\n      case \"🔴\":\r\n        return \"red\";\r\n      case \"🟡\":\r\n        return \"yellow\";\r\n      case \"🔵\":\r\n        return \"blue\";\r\n      default:\r\n        return c || \"gray\";\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      {winner && (\r\n        <WinnerModal winner={winner} onClose={() => setWinner(null)} />\r\n      )}\r\n\r\n      <div className=\"game-info\">\r\n        {gameOver\r\n          ? `Jogo encerrado - Vencedor: ${winner}`\r\n          : `${currentPlayer.name} (${currentPlayer.color}) - Tempo: ${timeElapsed}s`}\r\n      </div>\r\n\r\n      <div className=\"game-board\" onMouseMove={handleMouseMove}>\r\n        {board.map((rowArr, r) => (\r\n          <div key={r} className=\"board-row\">\r\n            {rowArr.map((cell, c) => {\r\n              const isSpecial = specialCells.some(\r\n                (cell) => cell.row === r && cell.col === c\r\n              );\r\n              return (\r\n                <div\r\n                  key={c}\r\n                  className={[\r\n                    \"board-cell\",\r\n                    highlightedCol === c && \"highlighted\",\r\n                    gameOver && \"disabled\",\r\n                    isSpecial && \"special\",\r\n                  ]\r\n                    .filter(Boolean)\r\n                    .join(\" \")}\r\n                  onClick={() => handleColumnClick(c)}\r\n                  onDragOver={(e) => e.preventDefault()}\r\n                  onDrop={() => handleColumnClick(c)}\r\n                  style={{ color: cell ? getColorStyle(cell) : undefined }}\r\n                >\r\n                  {cell}\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {gameOver && (\r\n        <div className=\"game-over-button\">\r\n          <button onClick={resetGame}>Reiniciar Jogo</button>\r\n          <button\r\n            className=\"back-button\"\r\n            onClick={() => (window.location.href = \"/\")}\r\n          >\r\n            🏠 Página Inicial\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}