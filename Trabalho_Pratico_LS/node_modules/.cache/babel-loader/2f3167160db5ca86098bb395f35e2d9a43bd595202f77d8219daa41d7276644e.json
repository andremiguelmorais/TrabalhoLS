{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\TrabalhoLS\\\\Trabalho_Pratico_LS\\\\src\\\\components\\\\Game-Setup\\\\GameSetup.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\"; // Importa React e o hook useState do pacote react\nimport \"./gamesetup.css\"; // Importa o arquivo de estilos CSS para o componente\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GameSetup({\n  onStartGame\n}) {\n  _s();\n  // Declara o componente funcional GameSetup que recebe a prop onStartGame\n  const [opponent, setOpponent] = useState(\"1\"); // Define o estado 'opponent' inicializado com '1' (outro jogador)\n  const [player1Name, setPlayer1Name] = useState(\"Jogador 1\"); // Define o estado 'player1Name' inicializado com 'Jogador 1'\n  const [player2Name, setPlayer2Name] = useState(\"Jogador 2\"); // Define o estado 'player2Name' inicializado com 'Jogador 2'\n  const [player1Color, setPlayer1Color] = useState(\"ðŸ”´\"); // Define o estado 'player1Color' inicializado com 'ðŸ”´'\n  const [player2Color, setPlayer2Color] = useState(\"ðŸŸ¡\"); // Define o estado 'player2Color' inicializado com 'ðŸŸ¡'\n  // Linha em branco\n  const handleStart = () => {\n    // Declara a funÃ§Ã£o handleStart que serÃ¡ chamada ao iniciar o jogo\n    if (opponent === \"2\") setPlayer2Name(\"BOT\"); // Se o oponente for '2', define o nome do jogador 2 como 'BOT'\n    onStartGame({\n      // Chama a funÃ§Ã£o onStartGame passando um objeto com configuraÃ§Ãµes\n      opponent,\n      // Inclui o valor de 'opponent' no objeto\n      player1Name,\n      // Inclui o valor de 'player1Name' no objeto\n      player2Name: opponent === \"2\" ? \"BOT\" : player2Name,\n      // Define 'player2Name' como 'BOT' se oponente for '2', caso contrÃ¡rio usa player2Name\n      player1Color,\n      // Inclui o valor de 'player1Color' no objeto\n      player2Color // Inclui o valor de 'player2Color' no objeto\n    }); // Fecha o objeto e a chamada de funÃ§Ã£o\n  }; // Fecha a definiÃ§Ã£o da funÃ§Ã£o handleStart\n  // Linha em branco\n  return (\n    /*#__PURE__*/\n    // InÃ­cio do retorno do JSX do componente\n    _jsxDEV(\"div\", {\n      className: \"game-setup-container\",\n      style: {\n        padding: \"20px\"\n      },\n      children: [\"            // Container principal do setup do jogo com padding de 20px\", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Configura\\xE7\\xE3o do Jogo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 3\n      }, this), \"                                                  // T\\xEDtulo da se\\xE7\\xE3o de configura\\xE7\\xE3o do jogo // Linha em branco\", /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label-opponent\",\n        children: \"Oponente:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 3\n      }, this), \"                             // Label para sele\\xE7\\xE3o de oponente\", /*#__PURE__*/_jsxDEV(\"select\", {\n        // InÃ­cio do elemento select para escolher oponente\n        className: \"select-opponent\" // Classe CSS para estilizar o select de oponente\n        ,\n        value: opponent // Define o valor selecionado como o estado 'opponent'\n        ,\n        onChange: e => setOpponent(e.target.value) // Atualiza o estado 'opponent' quando o select muda\n        ,\n        children: [\"                                                                              // Fecha tag de abertura do select\", /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"1\",\n          children: \"Outro Jogador\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 5\n        }, this), \"                                     // Op\\xE7\\xE3o para escolher outro jogador como oponente\", /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2\",\n          children: \"BOT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 5\n        }, this), \"                                                // Op\\xE7\\xE3o para escolher o BOT como oponente\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 3\n      }, this), \"                                                                      // Fecha elemento select de oponente // Linha em branco\", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player-setup player1\",\n        children: [\"                                         // Container de configura\\xE7\\xE3o do Jogador 1\", /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Jogador 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }, this), \"                                                            // Subt\\xEDtulo indicando configura\\xE7\\xF5es do Jogador 1\", /*#__PURE__*/_jsxDEV(\"input\", {\n          // InÃ­cio do input para nome do Jogador 1\n          type: \"text\" // Tipo de input texto\n          ,\n          className: \"input-player-name\" // Classe CSS para estilizar input de nome do jogador\n          ,\n          value: player1Name // Define o valor do input como estado 'player1Name'\n          ,\n          onChange: e => setPlayer1Name(e.target.value) // Atualiza o estado 'player1Name' quando o input muda\n          ,\n          placeholder: \"Nome Jogador 1\" // Placeholder exibido quando nÃ£o hÃ¡ valor no input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 5\n        }, this), \"                                                                            // Fecha elemento input do Jogador 1\", /*#__PURE__*/_jsxDEV(\"select\", {\n          // InÃ­cio do select para cor do Jogador 1\n          className: \"select-player-color\" // Classe CSS para estilizar select de cor do jogador\n          ,\n          value: player1Color // Define o valor do select como estado 'player1Color'\n          ,\n          onChange: e => setPlayer1Color(e.target.value) // Atualiza o estado 'player1Color' quando o select muda\n          ,\n          children: [\"                                                                            // Fecha tag de abertura do select\", /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\\uD83D\\uDD34\",\n            children: \"Vermelho (\\uD83D\\uDD34)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 7\n          }, this), \"                                    // Op\\xE7\\xE3o de cor Vermelho para Jogador 1\", /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\\uD83D\\uDFE1\",\n            children: \"Amarelo (\\uD83D\\uDFE1)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }, this), \"                                      // Op\\xE7\\xE3o de cor Amarelo para Jogador 1\", /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\\uD83D\\uDD35\",\n            children: \"Azul (\\uD83D\\uDD35)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this), \"                                        // Op\\xE7\\xE3o de cor Azul para Jogador 1\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 5\n        }, this), \"                                                                    // Fecha elemento select de cor do Jogador 1\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 3\n      }, this), \"                                                                         // Fecha container de configura\\xE7\\xE3o do Jogador 1 // Linha em branco\", opponent === \"1\" &&\n      /*#__PURE__*/\n      // Verifica se opponent Ã© '1' para renderizar configuraÃ§Ã£o do Jogador 2\n      _jsxDEV(\"div\", {\n        className: \"player-setup player2\",\n        children: [\"                                       // Container de configura\\xE7\\xE3o do Jogador 2\", /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Jogador 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this), \"                                                          // Subt\\xEDtulo indicando configura\\xE7\\xF5es do Jogador 2\", /*#__PURE__*/_jsxDEV(\"input\", {\n          // InÃ­cio do input para nome do Jogador 2\n          type: \"text\" // Tipo de input texto\n          ,\n          className: \"input-player-name\" // Classe CSS para estilizar input de nome do jogador\n          ,\n          value: player2Name // Define o valor do input como estado 'player2Name'\n          ,\n          onChange: e => setPlayer2Name(e.target.value) // Atualiza o estado 'player2Name' quando o input muda\n          ,\n          placeholder: \"Nome Jogador 2\" // Placeholder exibido quando nÃ£o hÃ¡ valor no input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this), \"                                                                          // Fecha elemento input do Jogador 2\", /*#__PURE__*/_jsxDEV(\"select\", {\n          // InÃ­cio do select para cor do Jogador 2\n          className: \"select-player-color\" // Classe CSS para estilizar select de cor do jogador\n          ,\n          value: player2Color // Define o valor do select como estado 'player2Color'\n          ,\n          onChange: e => setPlayer2Color(e.target.value) // Atualiza o estado 'player2Color' quando o select muda\n          ,\n          children: [\"                                                                          // Fecha tag de abertura do select\", /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\\uD83D\\uDFE1\",\n            children: \"Amarelo (\\uD83D\\uDFE1)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 9\n          }, this), \"                                    // Op\\xE7\\xE3o de cor Amarelo para Jogador 2\", /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\\uD83D\\uDD34\",\n            children: \"Vermelho (\\uD83D\\uDD34)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 9\n          }, this), \"                                    // Op\\xE7\\xE3o de cor Vermelho para Jogador 2\", /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\\uD83D\\uDD35\",\n            children: \"Azul (\\uD83D\\uDD35)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this), \"                                      // Op\\xE7\\xE3o de cor Azul para Jogador 2\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 7\n        }, this), \"                                                                  // Fecha elemento select de cor do Jogador 2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this) // Fecha container de configuraÃ§Ã£o do Jogador 2\n      , \"                                                                            // Fecha condi\\xE7\\xE3o para renderizar Jogador 2 // Linha em branco\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-start\",\n        onClick: handleStart,\n        children: \"                            // Bot\\xE3o que aciona handleStart para iniciar o jogo Iniciar Jogo                                                                 // Texto exibido no bot\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 3\n      }, this), \"                                                                    // Fecha elemento button\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }, this) // Fecha container principal de configuraÃ§Ã£o\n    // Linha em branco\n  ); // Fecha retorno do JSX\n} // Fecha definiÃ§Ã£o do componente GameSetup\n// Linha em branco\n_s(GameSetup, \"T84e8tKNunK4x5NCCYGl+OkchEE=\");\n_c = GameSetup;\nexport default GameSetup; // Exporta o componente GameSetup como padrÃ£o\nvar _c;\n$RefreshReg$(_c, \"GameSetup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","GameSetup","onStartGame","_s","opponent","setOpponent","player1Name","setPlayer1Name","player2Name","setPlayer2Name","player1Color","setPlayer1Color","player2Color","setPlayer2Color","handleStart","className","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/andre/TrabalhoLS/Trabalho_Pratico_LS/src/components/Game-Setup/GameSetup.component.jsx"],"sourcesContent":["import React, { useState } from \"react\";                                        // Importa React e o hook useState do pacote react\r\nimport \"./gamesetup.css\";                                                        // Importa o arquivo de estilos CSS para o componente\r\nfunction GameSetup({ onStartGame }) {                                            // Declara o componente funcional GameSetup que recebe a prop onStartGame\r\n  const [opponent, setOpponent] = useState(\"1\");                                 // Define o estado 'opponent' inicializado com '1' (outro jogador)\r\n  const [player1Name, setPlayer1Name] = useState(\"Jogador 1\");                   // Define o estado 'player1Name' inicializado com 'Jogador 1'\r\n  const [player2Name, setPlayer2Name] = useState(\"Jogador 2\");                   // Define o estado 'player2Name' inicializado com 'Jogador 2'\r\n  const [player1Color, setPlayer1Color] = useState(\"ðŸ”´\");                         // Define o estado 'player1Color' inicializado com 'ðŸ”´'\r\n  const [player2Color, setPlayer2Color] = useState(\"ðŸŸ¡\");                         // Define o estado 'player2Color' inicializado com 'ðŸŸ¡'\r\n                                                                                // Linha em branco\r\n  const handleStart = () => {                                                     // Declara a funÃ§Ã£o handleStart que serÃ¡ chamada ao iniciar o jogo\r\n    if (opponent === \"2\") setPlayer2Name(\"BOT\");                                 // Se o oponente for '2', define o nome do jogador 2 como 'BOT'\r\n    onStartGame({                                                                 // Chama a funÃ§Ã£o onStartGame passando um objeto com configuraÃ§Ãµes\r\n      opponent,                                                                   // Inclui o valor de 'opponent' no objeto\r\n      player1Name,                                                                // Inclui o valor de 'player1Name' no objeto\r\n      player2Name: opponent === \"2\" ? \"BOT\" : player2Name,                       // Define 'player2Name' como 'BOT' se oponente for '2', caso contrÃ¡rio usa player2Name\r\n      player1Color,                                                               // Inclui o valor de 'player1Color' no objeto\r\n      player2Color,                                                               // Inclui o valor de 'player2Color' no objeto\r\n    });                                                                           // Fecha o objeto e a chamada de funÃ§Ã£o\r\n  };                                                                              // Fecha a definiÃ§Ã£o da funÃ§Ã£o handleStart\r\n                                                                                // Linha em branco\r\n  return (                                                                       // InÃ­cio do retorno do JSX do componente\r\n    <div className=\"game-setup-container\" style={{ padding: \"20px\" }}>            // Container principal do setup do jogo com padding de 20px\r\n  <h2>ConfiguraÃ§Ã£o do Jogo</h2>                                                  // TÃ­tulo da seÃ§Ã£o de configuraÃ§Ã£o do jogo\r\n                                                                                // Linha em branco\r\n  <label className=\"label-opponent\">Oponente:</label>                             // Label para seleÃ§Ã£o de oponente\r\n  <select                                                                        // InÃ­cio do elemento select para escolher oponente\r\n    className=\"select-opponent\"                                                  // Classe CSS para estilizar o select de oponente\r\n    value={opponent}                                                             // Define o valor selecionado como o estado 'opponent'\r\n    onChange={(e) => setOpponent(e.target.value)}                                 // Atualiza o estado 'opponent' quando o select muda\r\n  >                                                                              // Fecha tag de abertura do select\r\n    <option value=\"1\">Outro Jogador</option>                                     // OpÃ§Ã£o para escolher outro jogador como oponente\r\n    <option value=\"2\">BOT</option>                                                // OpÃ§Ã£o para escolher o BOT como oponente\r\n  </select>                                                                      // Fecha elemento select de oponente\r\n                                                                                // Linha em branco\r\n  <div className=\"player-setup player1\">                                         // Container de configuraÃ§Ã£o do Jogador 1\r\n    <h3>Jogador 1</h3>                                                            // SubtÃ­tulo indicando configuraÃ§Ãµes do Jogador 1\r\n    <input                                                                       // InÃ­cio do input para nome do Jogador 1\r\n      type=\"text\"                                                                 // Tipo de input texto\r\n      className=\"input-player-name\"                                               // Classe CSS para estilizar input de nome do jogador\r\n      value={player1Name}                                                          // Define o valor do input como estado 'player1Name'\r\n      onChange={(e) => setPlayer1Name(e.target.value)}                             // Atualiza o estado 'player1Name' quando o input muda\r\n      placeholder=\"Nome Jogador 1\"                                                 // Placeholder exibido quando nÃ£o hÃ¡ valor no input\r\n    />                                                                            // Fecha elemento input do Jogador 1\r\n    <select                                                                      // InÃ­cio do select para cor do Jogador 1\r\n      className=\"select-player-color\"                                             // Classe CSS para estilizar select de cor do jogador\r\n      value={player1Color}                                                         // Define o valor do select como estado 'player1Color'\r\n      onChange={(e) => setPlayer1Color(e.target.value)}                            // Atualiza o estado 'player1Color' quando o select muda\r\n    >                                                                            // Fecha tag de abertura do select\r\n      <option value=\"ðŸ”´\">Vermelho (ðŸ”´)</option>                                    // OpÃ§Ã£o de cor Vermelho para Jogador 1\r\n      <option value=\"ðŸŸ¡\">Amarelo (ðŸŸ¡)</option>                                      // OpÃ§Ã£o de cor Amarelo para Jogador 1\r\n      <option value=\"ðŸ”µ\">Azul (ðŸ”µ)</option>                                        // OpÃ§Ã£o de cor Azul para Jogador 1\r\n    </select>                                                                    // Fecha elemento select de cor do Jogador 1\r\n  </div>                                                                         // Fecha container de configuraÃ§Ã£o do Jogador 1\r\n                                                                                // Linha em branco\r\n  {opponent === \"1\" && (                                                         // Verifica se opponent Ã© '1' para renderizar configuraÃ§Ã£o do Jogador 2\r\n    <div className=\"player-setup player2\">                                       // Container de configuraÃ§Ã£o do Jogador 2\r\n      <h3>Jogador 2</h3>                                                          // SubtÃ­tulo indicando configuraÃ§Ãµes do Jogador 2\r\n      <input                                                                     // InÃ­cio do input para nome do Jogador 2\r\n        type=\"text\"                                                               // Tipo de input texto\r\n        className=\"input-player-name\"                                             // Classe CSS para estilizar input de nome do jogador\r\n        value={player2Name}                                                       // Define o valor do input como estado 'player2Name'\r\n        onChange={(e) => setPlayer2Name(e.target.value)}                           // Atualiza o estado 'player2Name' quando o input muda\r\n        placeholder=\"Nome Jogador 2\"                                               // Placeholder exibido quando nÃ£o hÃ¡ valor no input\r\n      />                                                                          // Fecha elemento input do Jogador 2\r\n      <select                                                                    // InÃ­cio do select para cor do Jogador 2\r\n        className=\"select-player-color\"                                           // Classe CSS para estilizar select de cor do jogador\r\n        value={player2Color}                                                       // Define o valor do select como estado 'player2Color'\r\n        onChange={(e) => setPlayer2Color(e.target.value)}                          // Atualiza o estado 'player2Color' quando o select muda\r\n      >                                                                          // Fecha tag de abertura do select\r\n        <option value=\"ðŸŸ¡\">Amarelo (ðŸŸ¡)</option>                                    // OpÃ§Ã£o de cor Amarelo para Jogador 2\r\n        <option value=\"ðŸ”´\">Vermelho (ðŸ”´)</option>                                    // OpÃ§Ã£o de cor Vermelho para Jogador 2\r\n        <option value=\"ðŸ”µ\">Azul (ðŸ”µ)</option>                                      // OpÃ§Ã£o de cor Azul para Jogador 2\r\n      </select>                                                                  // Fecha elemento select de cor do Jogador 2\r\n    </div>                                                                       // Fecha container de configuraÃ§Ã£o do Jogador 2\r\n  )}                                                                            // Fecha condiÃ§Ã£o para renderizar Jogador 2\r\n                                                                                // Linha em branco\r\n  <button className=\"btn-start\" onClick={handleStart}>                            // BotÃ£o que aciona handleStart para iniciar o jogo\r\n    Iniciar Jogo                                                                 // Texto exibido no botÃ£o\r\n  </button>                                                                    // Fecha elemento button\r\n</div>                                                                         // Fecha container principal de configuraÃ§Ã£o\r\n                                                                                // Linha em branco\r\n  );                                                                            // Fecha retorno do JSX\r\n}                                                                               // Fecha definiÃ§Ã£o do componente GameSetup\r\n                                                                                // Linha em branco\r\nexport default GameSetup;                                                       // Exporta o componente GameSetup como padrÃ£o\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO,CAAC,CAAwC;AAChF,OAAO,iBAAiB,CAAC,CAAwD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACjF,SAASC,SAASA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAA6C;EAC/E,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAiC;EAC/E,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAmB;EAC/E,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,WAAW,CAAC,CAAC,CAAmB;EAC/E,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAyB;EAChF,MAAM,CAACc,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAyB;EACF;EAC9E,MAAMgB,WAAW,GAAGA,CAAA,KAAM;IAAsD;IAC9E,IAAIV,QAAQ,KAAK,GAAG,EAAEK,cAAc,CAAC,KAAK,CAAC,CAAC,CAAiC;IAC7EP,WAAW,CAAC;MAAkE;MAC5EE,QAAQ;MAAoE;MAC5EE,WAAW;MAAiE;MAC5EE,WAAW,EAAEJ,QAAQ,KAAK,GAAG,GAAG,KAAK,GAAGI,WAAW;MAAwB;MAC3EE,YAAY;MAAgE;MAC5EE,YAAY,CAAgE;IAC9E,CAAC,CAAC,CAAC,CAA2E;EAChF,CAAC,CAAC,CAA8E;EACF;EAC9E;IAAA;IAA+E;IAC7EZ,OAAA;MAAKe,SAAS,EAAC,sBAAsB;MAACC,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAC,QAAA,GAAC,yEACpE,eAAAlB,OAAA;QAAAkB,QAAA,EAAI;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,kIAE7B,eAAAtB,OAAA;QAAOe,SAAS,EAAC,gBAAgB;QAAAG,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,wEACnD,eAAAtB,OAAA;QAA+E;QAC7Ee,SAAS,EAAC,iBAAiB,CAAkD;QAAA;QAC7EQ,KAAK,EAAEnB,QAAS,CAA6D;QAAA;QAC7EoB,QAAQ,EAAGC,CAAC,IAAKpB,WAAW,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAiC;QAAA;QAAAL,QAAA,GAC/E,kHACC,eAAAlB,OAAA;UAAQuB,KAAK,EAAC,GAAG;UAAAL,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,iGACxC,eAAAtB,OAAA;UAAQuB,KAAK,EAAC,GAAG;UAAAL,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,oGAChC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,iIAET,eAAAtB,OAAA;QAAKe,SAAS,EAAC,sBAAsB;QAAAG,QAAA,GAAC,0FACpC,eAAAlB,OAAA;UAAAkB,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,0HAClB,eAAAtB,OAAA;UAA6E;UAC3E2B,IAAI,EAAC,MAAM,CAAiE;UAAA;UAC5EZ,SAAS,EAAC,mBAAmB,CAA+C;UAAA;UAC5EQ,KAAK,EAAEjB,WAAY,CAA0D;UAAA;UAC7EkB,QAAQ,EAAGC,CAAC,IAAKlB,cAAc,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAA6B;UAAA;UAC7EK,WAAW,EAAC,gBAAgB,CAAiD;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9E,CAAC,oHACF,eAAAtB,OAAA;UAA6E;UAC3Ee,SAAS,EAAC,qBAAqB,CAA6C;UAAA;UAC5EQ,KAAK,EAAEb,YAAa,CAAyD;UAAA;UAC7Ec,QAAQ,EAAGC,CAAC,IAAKd,eAAe,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAA4B;UAAA;UAAAL,QAAA,GAC9E,gHACC,eAAAlB,OAAA;YAAQuB,KAAK,EAAC,cAAI;YAAAL,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,qFACzC,eAAAtB,OAAA;YAAQuB,KAAK,EAAC,cAAI;YAAAL,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,sFACxC,eAAAtB,OAAA;YAAQuB,KAAK,EAAC,cAAI;YAAAL,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,qFACvC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,oHACX;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,qJAEN,EAAClB,QAAQ,KAAK,GAAG;MAAA;MAA8D;MAC7EJ,OAAA;QAAKe,SAAS,EAAC,sBAAsB;QAAAG,QAAA,GAAC,wFACpC,eAAAlB,OAAA;UAAAkB,QAAA,EAAI;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,wHAClB,eAAAtB,OAAA;UAA2E;UACzE2B,IAAI,EAAC,MAAM,CAA+D;UAAA;UAC1EZ,SAAS,EAAC,mBAAmB,CAA6C;UAAA;UAC1EQ,KAAK,EAAEf,WAAY,CAAuD;UAAA;UAC1EgB,QAAQ,EAAGC,CAAC,IAAKhB,cAAc,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAA2B;UAAA;UAC3EK,WAAW,EAAC,gBAAgB,CAA+C;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5E,CAAC,kHACF,eAAAtB,OAAA;UAA2E;UACzEe,SAAS,EAAC,qBAAqB,CAA2C;UAAA;UAC1EQ,KAAK,EAAEX,YAAa,CAAuD;UAAA;UAC3EY,QAAQ,EAAGC,CAAC,IAAKZ,eAAe,CAACY,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAA0B;UAAA;UAAAL,QAAA,GAC5E,8GACC,eAAAlB,OAAA;YAAQuB,KAAK,EAAC,cAAI;YAAAL,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,oFACxC,eAAAtB,OAAA;YAAQuB,KAAK,EAAC,cAAI;YAAAL,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,qFACzC,eAAAtB,OAAA;YAAQuB,KAAK,EAAC,cAAI;YAAAL,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,mFACvC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,kHACX;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,CAAuE;MAC9E,EAAC,kJAEF,eAAAtB,OAAA;QAAQe,SAAS,EAAC,WAAW;QAACc,OAAO,EAAEf,WAAY;QAAAI,QAAA,EAAC;MAEpD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,gGACX;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,CAAyE;IACC;EAAA,EAC5E,CAA4E;AAChF,CAAC,CAA+E;AACA;AAAAnB,EAAA,CAjFvEF,SAAS;AAAA6B,EAAA,GAAT7B,SAAS;AAkFlB,eAAeA,SAAS,CAAC,CAAuD;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}