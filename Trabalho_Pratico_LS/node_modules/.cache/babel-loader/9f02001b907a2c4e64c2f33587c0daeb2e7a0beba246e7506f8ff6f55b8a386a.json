{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\TrabalhoLS\\\\Trabalho_Pratico_LS\\\\src\\\\components\\\\gameboard\\\\GameBoard.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport WinnerModal from \"../Confetis/WinnerModal.component\";\nimport \"./game-board.css\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROWS = 6;\nconst COLS = 7;\nfunction GameBoard({\n  opponent,\n  player1Name,\n  player2Name,\n  player1Color,\n  player2Color\n}) {\n  _s();\n  const getRandomStartingPlayer = () => Math.random() < 0.5 ? {\n    name: player1Name,\n    color: player1Color\n  } : {\n    name: player2Name,\n    color: player2Color\n  };\n  const [board, setBoard] = useState(Array(ROWS).fill().map(() => Array(COLS).fill(null)));\n  const [currentPlayer, setCurrentPlayer] = useState(getRandomStartingPlayer());\n  const [gameOver, setGameOver] = useState(false);\n  const [highlightedCol, setHighlightedCol] = useState(null);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [winner, setWinner] = useState(null);\n  const resetGame = () => {\n    setBoard(Array(ROWS).fill().map(() => Array(COLS).fill(null)));\n    setCurrentPlayer(getRandomStartingPlayer());\n    setGameOver(false);\n    setHighlightedCol(null);\n    setTimeElapsed(0);\n    setWinner(null);\n  };\n  const handleColumnClick = colIndex => {\n    if (gameOver) return;\n    for (let row = ROWS - 1; row >= 0; row--) {\n      if (!board[row][colIndex]) {\n        const newBoard = board.map(r => [...r]);\n        newBoard[row][colIndex] = currentPlayer.color;\n        setBoard(newBoard);\n        checkForWinner(newBoard, row, colIndex);\n        setCurrentPlayer(currentPlayer.color === player1Color ? {\n          name: player2Name,\n          color: player2Color\n        } : {\n          name: player1Name,\n          color: player1Color\n        });\n        setTimeElapsed(0);\n        break;\n      }\n    }\n  };\n  const checkForWinner = (newBoard, row, col) => {\n    const dirs = [[0, 1], [1, 0], [1, 1], [1, -1]];\n    if (dirs.some(([dx, dy]) => checkDirection(newBoard, row, col, dx, dy))) {\n      setGameOver(true);\n      setWinner(currentPlayer.name);\n    }\n  };\n  const checkDirection = (board, row, col, dx, dy) => {\n    let count = 1;\n    for (let dir of [1, -1]) {\n      for (let i = 1; i < 4; i++) {\n        const r = row + i * dx * dir;\n        const c = col + i * dy * dir;\n        if (r >= 0 && r < ROWS && c >= 0 && c < COLS && board[r][c] === currentPlayer.color) {\n          count++;\n        } else break;\n      }\n    }\n    return count >= 4;\n  };\n\n  // Bot simples\n  useEffect(() => {\n    if (opponent === \"2\" && currentPlayer.color === player2Color && !gameOver) {\n      const t = setTimeout(() => handleColumnClick(Math.floor(Math.random() * COLS)), 500);\n      return () => clearTimeout(t);\n    }\n  }, [currentPlayer, opponent, board, gameOver]);\n\n  // Timer de 10s\n  useEffect(() => {\n    if (gameOver) return;\n    setTimeElapsed(0);\n    const interval = setInterval(() => {\n      setTimeElapsed(t => {\n        if (t >= 10) {\n          setCurrentPlayer(p => p.color === player1Color ? {\n            name: player2Name,\n            color: player2Color\n          } : {\n            name: player1Name,\n            color: player1Color\n          });\n          return 0;\n        }\n        return t + 1;\n      });\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [currentPlayer, gameOver, player1Color, player2Color, player1Name, player2Name]);\n  const handleMouseMove = e => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const colWidth = rect.width / COLS;\n    setHighlightedCol(Math.floor(x / colWidth));\n  };\n  const getColorStyle = c => {\n    switch (c) {\n      case \"🔴\":\n        return \"red\";\n      case \"🟡\":\n        return \"yellow\";\n      case \"🔵\":\n        return \"blue\";\n      default:\n        return c || \"gray\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [winner && /*#__PURE__*/_jsxDEV(WinnerModal, {\n      winner: winner,\n      onClose: () => setWinner(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"\",\n      className: \"back-button\",\n      children: \"\\uD83C\\uDFE0 P\\xE1gina Inicial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: gameOver ? `Jogo encerrado - Vencedor: ${winner}` : `${currentPlayer.name} (${currentPlayer.color}) - Tempo: ${timeElapsed}s`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      onMouseMove: handleMouseMove,\n      children: board.map((row, r) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row.map((cell, c) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `board-cell ${highlightedCol === c ? \"highlighted\" : \"\"} ${gameOver ? \"disabled\" : \"\"}`,\n          onClick: () => handleColumnClick(c),\n          onDragOver: e => e.preventDefault(),\n          onDrop: () => handleColumnClick(c),\n          style: {\n            color: cell ? getColorStyle(cell) : undefined\n          },\n          children: cell\n        }, c, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this))\n      }, r, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over-button\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Reiniciar Jogo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n_s(GameBoard, \"pI6dIVJcVNzJF6U+9NohoiZl7NI=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","useEffect","WinnerModal","Link","jsxDEV","_jsxDEV","ROWS","COLS","GameBoard","opponent","player1Name","player2Name","player1Color","player2Color","_s","getRandomStartingPlayer","Math","random","name","color","board","setBoard","Array","fill","map","currentPlayer","setCurrentPlayer","gameOver","setGameOver","highlightedCol","setHighlightedCol","timeElapsed","setTimeElapsed","winner","setWinner","resetGame","handleColumnClick","colIndex","row","newBoard","r","checkForWinner","col","dirs","some","dx","dy","checkDirection","count","dir","i","c","t","setTimeout","floor","clearTimeout","interval","setInterval","p","clearInterval","handleMouseMove","e","rect","currentTarget","getBoundingClientRect","x","clientX","left","colWidth","width","getColorStyle","children","onClose","fileName","_jsxFileName","lineNumber","columnNumber","to","className","onMouseMove","cell","onClick","onDragOver","preventDefault","onDrop","style","undefined","_c","$RefreshReg$"],"sources":["C:/Users/andre/TrabalhoLS/Trabalho_Pratico_LS/src/components/gameboard/GameBoard.component.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport WinnerModal from \"../Confetis/WinnerModal.component\";\r\nimport \"./game-board.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ROWS = 6;\r\nconst COLS = 7;\r\n\r\nfunction GameBoard({ opponent, player1Name, player2Name, player1Color, player2Color }) {\r\n  const getRandomStartingPlayer = () =>\r\n    Math.random() < 0.5\r\n      ? { name: player1Name, color: player1Color }\r\n      : { name: player2Name, color: player2Color };\r\n\r\n  const [board, setBoard] = useState(\r\n    Array(ROWS).fill().map(() => Array(COLS).fill(null))\r\n  );\r\n  const [currentPlayer, setCurrentPlayer] = useState(getRandomStartingPlayer());\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [highlightedCol, setHighlightedCol] = useState(null);\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n  const [winner, setWinner] = useState(null);\r\n\r\n  const resetGame = () => {\r\n    setBoard(Array(ROWS).fill().map(() => Array(COLS).fill(null)));\r\n    setCurrentPlayer(getRandomStartingPlayer());\r\n    setGameOver(false);\r\n    setHighlightedCol(null);\r\n    setTimeElapsed(0);\r\n    setWinner(null);\r\n  };\r\n\r\n  const handleColumnClick = (colIndex) => {\r\n    if (gameOver) return;\r\n    for (let row = ROWS - 1; row >= 0; row--) {\r\n      if (!board[row][colIndex]) {\r\n        const newBoard = board.map((r) => [...r]);\r\n        newBoard[row][colIndex] = currentPlayer.color;\r\n        setBoard(newBoard);\r\n        checkForWinner(newBoard, row, colIndex);\r\n        setCurrentPlayer(\r\n          currentPlayer.color === player1Color\r\n            ? { name: player2Name, color: player2Color }\r\n            : { name: player1Name, color: player1Color }\r\n        );\r\n        setTimeElapsed(0);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForWinner = (newBoard, row, col) => {\r\n    const dirs = [\r\n      [0, 1],\r\n      [1, 0],\r\n      [1, 1],\r\n      [1, -1]\r\n    ];\r\n    if (dirs.some(([dx, dy]) => checkDirection(newBoard, row, col, dx, dy))) {\r\n      setGameOver(true);\r\n      setWinner(currentPlayer.name);\r\n    }\r\n  };\r\n\r\n  const checkDirection = (board, row, col, dx, dy) => {\r\n    let count = 1;\r\n    for (let dir of [1, -1]) {\r\n      for (let i = 1; i < 4; i++) {\r\n        const r = row + i * dx * dir;\r\n        const c = col + i * dy * dir;\r\n        if (\r\n          r >= 0 &&\r\n          r < ROWS &&\r\n          c >= 0 &&\r\n          c < COLS &&\r\n          board[r][c] === currentPlayer.color\r\n        ) {\r\n          count++;\r\n        } else break;\r\n      }\r\n    }\r\n    return count >= 4;\r\n  };\r\n\r\n  // Bot simples\r\n  useEffect(() => {\r\n    if (opponent === \"2\" && currentPlayer.color === player2Color && !gameOver) {\r\n      const t = setTimeout(() => handleColumnClick(Math.floor(Math.random() * COLS)), 500);\r\n      return () => clearTimeout(t);\r\n    }\r\n  }, [currentPlayer, opponent, board, gameOver]);\r\n\r\n  // Timer de 10s\r\n  useEffect(() => {\r\n    if (gameOver) return;\r\n    setTimeElapsed(0);\r\n    const interval = setInterval(() => {\r\n      setTimeElapsed((t) => {\r\n        if (t >= 10) {\r\n          setCurrentPlayer((p) =>\r\n            p.color === player1Color\r\n              ? { name: player2Name, color: player2Color }\r\n              : { name: player1Name, color: player1Color }\r\n          );\r\n          return 0;\r\n        }\r\n        return t + 1;\r\n      });\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [currentPlayer, gameOver, player1Color, player2Color, player1Name, player2Name]);\r\n\r\n  const handleMouseMove = (e) => {\r\n    const rect = e.currentTarget.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const colWidth = rect.width / COLS;\r\n    setHighlightedCol(Math.floor(x / colWidth));\r\n  };\r\n\r\n  const getColorStyle = (c) => {\r\n    switch (c) {\r\n      case \"🔴\":\r\n        return \"red\";\r\n      case \"🟡\":\r\n        return \"yellow\";\r\n      case \"🔵\":\r\n        return \"blue\";\r\n      default:\r\n        return c || \"gray\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Modal com confetti */}\r\n      {winner && (\r\n        <WinnerModal winner={winner} onClose={() => setWinner(null)} />\r\n      )}\r\n      <Link to=\"\" className=\"back-button\">\r\n  🏠 Página Inicial\r\n</Link>\r\n\r\n\r\n      <div className=\"game-info\">\r\n        {gameOver\r\n          ? `Jogo encerrado - Vencedor: ${winner}`\r\n          : `${currentPlayer.name} (${currentPlayer.color}) - Tempo: ${timeElapsed}s`}\r\n      </div>\r\n\r\n      <div className=\"game-board\" onMouseMove={handleMouseMove}>\r\n        {board.map((row, r) => (\r\n          <div key={r} className=\"board-row\">\r\n            {row.map((cell, c) => (\r\n              <div\r\n                key={c}\r\n                className={`board-cell ${\r\n                  highlightedCol === c ? \"highlighted\" : \"\"\r\n                } ${gameOver ? \"disabled\" : \"\"}`}\r\n                onClick={() => handleColumnClick(c)}\r\n                onDragOver={(e) => e.preventDefault()}\r\n                onDrop={() => handleColumnClick(c)}\r\n                style={{ color: cell ? getColorStyle(cell) : undefined }}\r\n              >\r\n                {cell}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {gameOver && (\r\n        <div className=\"game-over-button\">\r\n          <button onClick={resetGame}>Reiniciar Jogo</button>\r\n          \r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}