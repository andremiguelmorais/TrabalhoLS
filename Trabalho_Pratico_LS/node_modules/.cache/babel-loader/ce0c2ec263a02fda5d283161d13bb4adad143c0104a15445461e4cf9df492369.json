{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\TrabalhoLS\\\\Trabalho_Pratico_LS\\\\src\\\\components\\\\gameboard\\\\GameBoard.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./game-board.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ROWS = 6;\nconst COLS = 7;\nfunction GameBoard({\n  opponent\n}) {\n  _s();\n  const [board, setBoard] = useState(Array(ROWS).fill().map(() => Array(COLS).fill(null)));\n  const [currentPlayer, setCurrentPlayer] = useState('ðŸ”´');\n  const [gameOver, setGameOver] = useState(false);\n  const [highlightedCol, setHighlightedCol] = useState(null);\n  const resetGame = () => {\n    setBoard(Array(ROWS).fill().map(() => Array(COLS).fill(null)));\n    setCurrentPlayer('ðŸ”´');\n    setGameOver(false);\n    setHighlightedCol(null);\n  };\n  const handleColumnClick = colIndex => {\n    if (gameOver) return;\n    for (let row = ROWS - 1; row >= 0; row--) {\n      if (!board[row][colIndex]) {\n        const newBoard = board.map(r => [...r]);\n        newBoard[row][colIndex] = currentPlayer;\n        setBoard(newBoard);\n        setCurrentPlayer(currentPlayer === 'ðŸ”´' ? 'ðŸŸ¡' : 'ðŸ”´');\n        checkForWinner(newBoard, row, colIndex);\n        break;\n      }\n    }\n  };\n  const checkForWinner = (newBoard, row, col) => {\n    if (checkDirection(newBoard, row, col, 0, 1) || checkDirection(newBoard, row, col, 0, -1) || checkDirection(newBoard, row, col, 1, 0) || checkDirection(newBoard, row, col, 1, 1) || checkDirection(newBoard, row, col, 1, -1)) {\n      setGameOver(true);\n      alert(`${currentPlayer} venceu!`);\n    }\n  };\n  const checkDirection = (board, row, col, rowDir, colDir) => {\n    let count = 1;\n    for (let i = 1; i < 4; i++) {\n      const r = row + i * rowDir;\n      const c = col + i * colDir;\n      if (r >= 0 && r < ROWS && c >= 0 && c < COLS && board[r][c] === currentPlayer) {\n        count++;\n      } else {\n        break;\n      }\n    }\n    for (let i = 1; i < 4; i++) {\n      const r = row - i * rowDir;\n      const c = col - i * colDir;\n      if (r >= 0 && r < ROWS && c >= 0 && c < COLS && board[r][c] === currentPlayer) {\n        count++;\n      } else {\n        break;\n      }\n    }\n    return count >= 4;\n  };\n  const botPlay = () => {\n    if (gameOver || currentPlayer === 'ðŸ”´') return;\n    let colIndex = -1;\n    for (let col = 0; col < COLS; col++) {\n      for (let row = ROWS - 1; row >= 0; row--) {\n        if (!board[row][col]) {\n          colIndex = col;\n          break;\n        }\n      }\n      if (colIndex !== -1) break;\n    }\n    if (colIndex !== -1) {\n      handleColumnClick(colIndex);\n    }\n  };\n  useEffect(() => {\n    if (opponent === '2' && currentPlayer === 'ðŸŸ¡') {\n      const timeout = setTimeout(() => {\n        botPlay();\n      }, 500);\n      return () => clearTimeout(timeout);\n    }\n  }, [currentPlayer, opponent, board]);\n  const handleMouseMove = e => {\n    const boardRect = e.target.getBoundingClientRect();\n    const x = e.clientX - boardRect.left;\n    const colIndex = Math.floor(x / (boardRect.width / COLS));\n    setHighlightedCol(colIndex);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"draggable-piece\",\n      draggable: true,\n      onDragStart: e => e.dataTransfer.setData(\"col\", \"drag\"),\n      style: {\n        width: 60,\n        height: 60,\n        backgroundColor: currentPlayer === 'ðŸ”´' ? 'red' : 'yellow',\n        borderRadius: '50%',\n        border: '2px solid white',\n        margin: '0 auto',\n        marginBottom: 10,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        fontSize: '30px',\n        cursor: gameOver ? 'not-allowed' : 'grab',\n        opacity: gameOver ? 0.4 : 1\n      },\n      children: currentPlayer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      onMouseMove: handleMouseMove,\n      style: {\n        position: 'relative'\n      },\n      children: [board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        style: {\n          display: 'flex'\n        },\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleColumnClick(colIndex),\n          onDragOver: e => e.preventDefault(),\n          onDrop: () => handleColumnClick(colIndex),\n          className: `board-cell ${highlightedCol === colIndex ? 'highlighted' : ''}`,\n          style: {\n            width: 60,\n            height: 60,\n            backgroundColor: '#1e3a8a',\n            border: '2px solid white',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            fontSize: '30px',\n            cursor: gameOver ? 'not-allowed' : 'pointer'\n          },\n          children: cell\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)), highlightedCol !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"highlight-piece\",\n        style: {\n          position: 'absolute',\n          top: -60,\n          left: highlightedCol * 60,\n          width: 60,\n          height: 60,\n          backgroundColor: currentPlayer === 'ðŸ”´' ? 'red' : 'yellow',\n          borderRadius: '50%',\n          border: '2px solid white'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Reiniciar Jogo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(GameBoard, \"gsagJkYubPDq3MI7/b3MCHjgjzo=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ROWS","COLS","GameBoard","opponent","_s","board","setBoard","Array","fill","map","currentPlayer","setCurrentPlayer","gameOver","setGameOver","highlightedCol","setHighlightedCol","resetGame","handleColumnClick","colIndex","row","newBoard","r","checkForWinner","col","checkDirection","alert","rowDir","colDir","count","i","c","botPlay","timeout","setTimeout","clearTimeout","handleMouseMove","e","boardRect","target","getBoundingClientRect","x","clientX","left","Math","floor","width","children","className","draggable","onDragStart","dataTransfer","setData","style","height","backgroundColor","borderRadius","border","margin","marginBottom","display","alignItems","justifyContent","fontSize","cursor","opacity","fileName","_jsxFileName","lineNumber","columnNumber","onMouseMove","position","rowIndex","cell","onClick","onDragOver","preventDefault","onDrop","top","marginTop","textAlign","_c","$RefreshReg$"],"sources":["C:/Users/andre/TrabalhoLS/Trabalho_Pratico_LS/src/components/gameboard/GameBoard.component.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./game-board.css\";\r\n\r\nconst ROWS = 6;\r\nconst COLS = 7;\r\n\r\nfunction GameBoard({ opponent }) {\r\n  const [board, setBoard] = useState(Array(ROWS).fill().map(() => Array(COLS).fill(null)));\r\n  const [currentPlayer, setCurrentPlayer] = useState('ðŸ”´');\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [highlightedCol, setHighlightedCol] = useState(null);\r\n\r\n  const resetGame = () => {\r\n    setBoard(Array(ROWS).fill().map(() => Array(COLS).fill(null)));\r\n    setCurrentPlayer('ðŸ”´');\r\n    setGameOver(false);\r\n    setHighlightedCol(null);\r\n  };\r\n\r\n  const handleColumnClick = (colIndex) => {\r\n    if (gameOver) return;\r\n\r\n    for (let row = ROWS - 1; row >= 0; row--) {\r\n      if (!board[row][colIndex]) {\r\n        const newBoard = board.map((r) => [...r]);\r\n        newBoard[row][colIndex] = currentPlayer;\r\n        setBoard(newBoard);\r\n        setCurrentPlayer(currentPlayer === 'ðŸ”´' ? 'ðŸŸ¡' : 'ðŸ”´');\r\n        checkForWinner(newBoard, row, colIndex);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkForWinner = (newBoard, row, col) => {\r\n    if (\r\n      checkDirection(newBoard, row, col, 0, 1) ||\r\n      checkDirection(newBoard, row, col, 0, -1) ||\r\n      checkDirection(newBoard, row, col, 1, 0) ||\r\n      checkDirection(newBoard, row, col, 1, 1) ||\r\n      checkDirection(newBoard, row, col, 1, -1)\r\n    ) {\r\n      setGameOver(true);\r\n      alert(`${currentPlayer} venceu!`);\r\n    }\r\n  };\r\n\r\n  const checkDirection = (board, row, col, rowDir, colDir) => {\r\n    let count = 1;\r\n    for (let i = 1; i < 4; i++) {\r\n      const r = row + i * rowDir;\r\n      const c = col + i * colDir;\r\n      if (r >= 0 && r < ROWS && c >= 0 && c < COLS && board[r][c] === currentPlayer) {\r\n        count++;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    for (let i = 1; i < 4; i++) {\r\n      const r = row - i * rowDir;\r\n      const c = col - i * colDir;\r\n      if (r >= 0 && r < ROWS && c >= 0 && c < COLS && board[r][c] === currentPlayer) {\r\n        count++;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n    return count >= 4;\r\n  };\r\n\r\n  const botPlay = () => {\r\n    if (gameOver || currentPlayer === 'ðŸ”´') return;\r\n\r\n    let colIndex = -1;\r\n    for (let col = 0; col < COLS; col++) {\r\n      for (let row = ROWS - 1; row >= 0; row--) {\r\n        if (!board[row][col]) {\r\n          colIndex = col;\r\n          break;\r\n        }\r\n      }\r\n      if (colIndex !== -1) break;\r\n    }\r\n\r\n    if (colIndex !== -1) {\r\n      handleColumnClick(colIndex);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (opponent === '2' && currentPlayer === 'ðŸŸ¡') {\r\n      const timeout = setTimeout(() => {\r\n        botPlay();\r\n      }, 500);\r\n      return () => clearTimeout(timeout);\r\n    }\r\n  }, [currentPlayer, opponent, board]);\r\n\r\n  const handleMouseMove = (e) => {\r\n    const boardRect = e.target.getBoundingClientRect();\r\n    const x = e.clientX - boardRect.left;\r\n    const colIndex = Math.floor(x / (boardRect.width / COLS));\r\n    setHighlightedCol(colIndex);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* PeÃ§a arrastÃ¡vel */}\r\n      <div\r\n        className=\"draggable-piece\"\r\n        draggable\r\n        onDragStart={(e) => e.dataTransfer.setData(\"col\", \"drag\")}\r\n        style={{\r\n          width: 60,\r\n          height: 60,\r\n          backgroundColor: currentPlayer === 'ðŸ”´' ? 'red' : 'yellow',\r\n          borderRadius: '50%',\r\n          border: '2px solid white',\r\n          margin: '0 auto',\r\n          marginBottom: 10,\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          fontSize: '30px',\r\n          cursor: gameOver ? 'not-allowed' : 'grab',\r\n          opacity: gameOver ? 0.4 : 1\r\n        }}\r\n      >\r\n        {currentPlayer}\r\n      </div>\r\n\r\n      <div\r\n        className=\"game-board\"\r\n        onMouseMove={handleMouseMove}\r\n        style={{ position: 'relative' }}\r\n      >\r\n        {board.map((row, rowIndex) => (\r\n          <div key={rowIndex} className=\"board-row\" style={{ display: 'flex' }}>\r\n            {row.map((cell, colIndex) => (\r\n              <div\r\n                key={colIndex}\r\n                onClick={() => handleColumnClick(colIndex)}\r\n                onDragOver={(e) => e.preventDefault()}\r\n                onDrop={() => handleColumnClick(colIndex)}\r\n                className={`board-cell ${highlightedCol === colIndex ? 'highlighted' : ''}`}\r\n                style={{\r\n                  width: 60,\r\n                  height: 60,\r\n                  backgroundColor: '#1e3a8a',\r\n                  border: '2px solid white',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  fontSize: '30px',\r\n                  cursor: gameOver ? 'not-allowed' : 'pointer',\r\n                }}\r\n              >\r\n                {cell}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n\r\n        {/* PeÃ§a flutuante para indicaÃ§Ã£o visual da coluna */}\r\n        {highlightedCol !== null && (\r\n          <div\r\n            className=\"highlight-piece\"\r\n            style={{\r\n              position: 'absolute',\r\n              top: -60,\r\n              left: highlightedCol * 60,\r\n              width: 60,\r\n              height: 60,\r\n              backgroundColor: currentPlayer === 'ðŸ”´' ? 'red' : 'yellow',\r\n              borderRadius: '50%',\r\n              border: '2px solid white',\r\n            }}\r\n          ></div>\r\n        )}\r\n      </div>\r\n\r\n      {gameOver && (\r\n        <div style={{ marginTop: \"20px\", textAlign: \"center\" }}>\r\n          <button onClick={resetGame}>Reiniciar Jogo</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameBoard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}